// XO.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include "pch.h"
#include <iostream>
#include <ctime>
#define CheckX if (k == 3) exit = 1; else k = 0;
#define CheckO if (k == 3) exit = 2; else k = 0;
using namespace std;

void View(char a[3][3]) {
	int i, j;
	for (i = 0; i < 3; i++) {
		cout << "\t";
		for (j = 0; j < 3; j++) cout << a[i][j];
		cout << endl;
	}
}
void ETurnPC(char a[3][3],char q2) {
	int i, j;
	do {
		i = rand() % 3;
		j = rand() % 3;
	} while (a[i][j] != '-');
	a[i][j] = q2;
}
void HTurnPC(char a[3][3], char q2, char q1){
	int i, j;
	bool f = 0;
	while (f == 0) {
		int b1=0, b2=0, n=0, ni=0, nj=0;
		// 1) По строчкам
		for (i = 0; i < 3; i++) {
			for (j = 0; j < 3; j++) {
				if (a[i][j] == q2) b2++; // счетчик "своих" знаков
				if (a[i][j] == q1) b1++; // счетчик "чужих" знаков
				if (a[i][j] == '-') {	 // обнаружение пустых клеток
					n++;				 // счетчик пустых клеток
					if (b2 == 2 || b1 == 2) nj = j; // запоминание координаты пустой клетки в текущей строке
				}
			}
			if (b2 == 2 || b1 == 2) {
				a[i][nj] = q2; // дополнение строки 3-им символом
				f = 1;
				break;
			}
			b1 = b2 = n = 0;
		}
		// 2) По столбцам
		for (j = 0; j < 3; j++) {
			for (i = 0; i < 3; i++) {
				if (a[i][j] == q2) b2++;
				if (a[i][j] == q1) b1++;
				if (a[i][j] == '-') {
					n++;				 
					if (b2 == 2 || b1 == 2) ni = i;
				}
			}
			if (b2 == 2 || b1 == 2) {
				a[ni][j] = q2;
				f = 1;
				break;
			}
			b1 = b2 = n = 0;
		}
		b1 = b2 = n = 0;
		// 3) По диагонали слева направо
		for (i = 0; i < 3; i++) {
			if (a[i][i] == q2) b2++;
			if (a[i][i] == q1) b1++;
			if (a[i][i] == '-') {
				n++;
				if (b2 == 2 || b1 == 2) ni = i;
			}
		if (b2 == 2 || b1 == 2) {
			a[ni][ni] = q2;
			f = 1;
			break;
		}
		}
		b1 = b2 = n = 0;
		// 4) По диагонали справа налево

		if (a[2][0] == '-') {
			n++;
			ni = 2;
			nj = 0;
		}
		if (a[2][2] == '-') {
			n++;
			ni = 2;
			nj = 2;
		}
		if (a[0][2] == '-') {
			n++;
			ni = 2;
			nj = 0;
		}
		if (n == 1) {
			a[ni][nj] = q2;
			n = 0;
			f = 1;
			break;
		}
		n = 0;
		// 5) Случайный ход
		do {
			i = rand() % 3;
			j = rand() % 3;
		} while (a[i][j] != '-');
		a[i][j] = q2;
		f = 1;
		break;
	}
}
int WinX(char a[3][3], int exit) {
	int i, j,k=0;
		// По горизонтали
		for (i = 0; i < 3; i++) if (a[i][0] == 'X') k++; CheckX
		for (i = 0; i < 3; i++) if (a[i][1] == 'X') k++; CheckX
		for (i = 0; i < 3; i++) if (a[i][2] == 'X') k++; CheckX
		// По вертикали
		for (j = 0; j < 3; j++) if (a[0][j] == 'X') k++; CheckX
		for (j = 0; j < 3; j++) if (a[1][j] == 'X') k++; CheckX
		for (j = 0; j < 3; j++) if (a[2][j] == 'X') k++; CheckX
		// По диагонали
		if (a[0][0] == 'X' && a[1][1] == 'X' && a[2][2] == 'X') exit = 1;
		if (a[2][0] == 'X' && a[1][1] == 'X' && a[0][2] == 'X') exit = 1;
	return exit;
}
int WinO(char a[3][3], int exit) {
	int i, j, k = 0;
		// По горизонтали
		for (i = 0; i < 3; i++) if (a[i][0] == 'O') k++; CheckO
		for (i = 0; i < 3; i++) if (a[i][1] == 'O') k++; CheckO
		for (i = 0; i < 3; i++) if (a[i][2] == 'O') k++; CheckO
		// По вертикали
		for (j = 0; j < 3; j++) if (a[0][j] == 'O') k++; CheckO
		for (j = 0; j < 3; j++) if (a[1][j] == 'O') k++; CheckO
		for (j = 0; j < 3; j++) if (a[2][j] == 'O') k++; CheckO
		// По диагонали
		if (a[0][0] == 'O' && a[1][1] == 'O' && a[2][2] == 'O') exit = 2;
		if (a[2][0] == 'O' && a[1][1] == 'O' && a[0][2] == 'O') exit = 2;
	return exit;
}
int Draw(char a[3][3], int exit) {
	int i, j, f = 0;
	for (i = 0; i < 3; i++) {
		for (j = 0; j < 3; j++) if (a[i][j] != '-') f++;
		if (f == 9) {
			exit = 3;
			break;
		}
	}
	return exit;
}

int main()
{
	srand(time(0));
	setlocale(LC_ALL, "RUS");
	while (!feof(stdin)) {
		int d, i, j, c, exit = 0;
		bool f;
		char a[3][3], q1, q2, v;
		
		cout << "=== Выберите сложность игры ===\n";
		cout << "1. Легко\n2. Сложно\n0. Выход\n";
		cin >> d;
		switch (d) {
		case 1: cout << "=== Был выбран легкий уровень сложности ===\n";
			system("pause");
			system("cls");
			break;
		case 2: cout << "=== Был выбран сложный уровень сложности ===\n";
			system("pause");
			system("cls");
			break;
		case 0: return 0; break;
		default: cout << " =!= Такой команды не существует =!=\n\n";
			system("pause");
			system("cls");
			break;
		}
		cout << " =?= За кого хотите играть? =?=\n\n";
		cout << "1. Крестики \t-X-\n2. Нолики \t-O-\n3. Всё равно \t-?-\n0. Выход \n";
		cin >> c;
		system("cls");
		switch (c)
		{
		case 1: q1 = 'X';
			q2 = 'O';
			f = 0;
			cout << "=X= Вы играете за крестики =X=\n\n";
			break;
		case 2: q1 = 'O';
			q2 = 'X';
			f = 1;
			cout << "=O= Вы играете за нолики =O=\n\n";
			break;
		case 3: q1 = rand() % 2;
			if (q1 == 0) {
				q1 = 'O';
				q2 = 'X';
				f = 1;
				cout << " =O= Вы играете за нолики =O=\n\n";
			}
			else {
				q1 = 'X';
				q2 = 'O';
				f = 0;
				cout << " =X= Вы играете за крестики =X=\n\n";
			}
			break;
		case 0: return 0; break;
		default:
			cout << " =!= Такой команды не существует =!=\n\n";
			system("pause");
			system("cls");
			break;
		}
		if (f == 0) cout << " === Вы ходите первыми ===\n";
		else cout << " === Противник ходит первым ===\n";
		system("pause");
		system("cls");
		for (i = 0; i < 3; i++) { // Заполнение массива / Новая игра
			cout << "\t";
			for (j = 0; j < 3; j++) {
				a[i][j] = '-';
				cout << a[i][j];
			}
			cout << endl;
		}
		if (f == 1) { // Если ИИ ходит первым
			system("cls");
			if (d == 1) ETurnPC(a, q2);	// Ход ИИ
			else HTurnPC(a, q2, q1);
			View(a);		// Отображение поля после хода ИИ
		}
		while (exit == 0) {
			cout << "Ваш ход:\n";
			do {
				cin >> i >> j;	// Ход Игрока
				if (a[i - 1][j - 1] != '-') {
					cout << " =!= Нельзя сотворить здесь =!=\n\n";
					system("pause");
					system("cls");
					View(a);
					cout << "Ваш ход:\n";
				}
			} while (a[i - 1][j - 1] != '-');
			a[i - 1][j - 1] = q1;
			system("cls");
			View(a);			// Отображение поля после хода Игрока
			system("pause");
			system("cls");
			exit = Draw(a, exit);// Проверка
			exit = WinX(a, exit);
			exit = WinO(a, exit);
			if (exit == 1 || exit == 2 || exit == 3) break;
			if (d == 1) ETurnPC(a, q2);	// Ход ИИ
			else HTurnPC(a, q2, q1);
			View(a);				// Отображение поля после хода ИИ
			exit = Draw(a, exit);	// Проверка
			exit = WinX(a, exit);
			exit = WinO(a, exit);
			if (exit == 1 || exit == 2 || exit == 3) break;
		}
		if (exit == 1) cout << " =X= Крестики выиграли! =X=\n";
		if (exit == 2) cout << " =O= Нолики выиграли! =O=\n";
		if (exit == 3) cout << " === Ничья! ===\n"; 
		cout << " =?= Хотите сыграть еще раз? =?= (Y/N)\n";
		cin >> v;
		system("cls");
		if (v == 'N' || v == 'n') break;
	}
	return 0;
}